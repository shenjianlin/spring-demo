<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.fengze.spring"/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="jdbc.properties"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${c3p0.driverClass}"></property>
        <property name="jdbcUrl" value="${c3p0.url}"></property>
        <property name="user" value="${c3p0.user}"></property>
        <property name="password" value="${c3p0.password}"></property>
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}"></property>
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}"></property>
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"></property>
        <property name="acquireRetryDelay" value="1000"></property>
        <property name="acquireRetryAttempts" value="60"></property>
        <property name="breakAfterAcquireFailure" value="false"></property>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="configLocation" value="mybatis-config.xml"/>-->
        <!--<property name="plugins">-->
        <!--<array>-->
        <!--<bean class="com.github.pagehelper.PageHelper">-->
        <!--<property name="properties">-->
        <!--<value>-->
        <!--dialect=mysql-->
        <!--reasonable=true-->
        <!--</value>-->
        <!--</property>-->
        <!--</bean>-->
        <!--</array>-->
        <!--</property>-->
        <property name="typeAliasesPackage" value="com.fengze.spring.domain"/>
        <property name="mapperLocations" value="classpath:com/fengze/spring/mapper/*Mapper.xml"/>
    </bean>

    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--<property name="basePackage" value="com.fengze.spring.mapper"/>-->
    <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    <!--</bean>-->

    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.fengze.spring.mapper"/>
        <property name="markerInterface" value="tk.mybatis.mapper.common.Mapper"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--AOP XML 配置 切面类 我想要做的事-->
   <!-- <bean id="aspetBean" class="com.fengze.spring.common.UserAop"/>-->


    <!--* 1 execution (* com.fengze.spring.service.impl..*.*(..))-->
    <!--* 2 execution ： 表示执行-->
    <!--* 3 第一个*号 : 表示返回值类型， *可以是任意类型-->
    <!--* 4 com.wangku.spring.service.impl : 代表扫描的包-->
    <!--* 5 .. : 代表其底下的子包也进行拦截-->
    <!--* 6 第二个*号 : 代表对哪个类进行拦截，*代表所有类-->
    <!--* 7 第三个*号 : 代表方法  *代表任意方法-->
    <!--* 8 (..) : 代表方法的参数有无都可以-->
    <!--<aop:config>-->
        <!--<aop:aspect id="aspet" ref="aspetBean">-->
            <!--<aop:pointcut id="cut" expression="execution (* com.fengze.spring.service.impl..*.*(..))"/>-->

            <!--&lt;!&ndash;前置通知&ndash;&gt;-->
            <!--<aop:before pointcut-ref="cut" method="doBefore"/>-->
            <!--&lt;!&ndash;后置通知&ndash;&gt;-->
            <!--<aop:after-returning pointcut-ref="cut" method="doAferReturning"/>-->
            <!--&lt;!&ndash;最终通知&ndash;&gt;-->
            <!--<aop:after pointcut-ref="cut" method="doAfter"/>-->
            <!--&lt;!&ndash;例外通知&ndash;&gt;-->
            <!--<aop:after-throwing pointcut-ref="cut" method="doAferThrowing"/>-->
            <!--&lt;!&ndash;环绕通知&ndash;&gt;-->
            <!--<aop:around pointcut-ref="cut" method="doAround"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->


    <!--AOP annotation 配置-->
    <aop:aspectj-autoproxy/>
</beans>


